<job id="Install-AppVol2">
<script language="VBScript" src="..\..\scripts\ZTIUtility.vbs"/>
<script language="VBScript"> 

' //----------------------------------------------------------------------------
' //
' // Solution: Richard's Deployment Script
' // File: Install-AppVol2.wsf
' //
' // Purpose: This will install Vmware AppVolume 2x Manager
' //
' // Author: Richard Tracy
' //
' // Usage: cscript Install-AppVol2.wsf [/arch:x64|x86] [/debug:true]
' //
' //----------------------------------------------------------------------------

'//----------------------------------------------------------------------------
'// Global constant and variable declarations
'//---------------------------------------------------------------------------- 
Option Explicit 

Dim iRetVal 
'//----------------------------------------------------------------------------
'// Main routine
'//---------------------------------------------------------------------------- 
'On Error Resume Next
iRetVal = ZTIProcess
ProcessResults iRetVal
On Error Goto 0 

'//---------------------------------------------------------------------------
'// Function: ZTIProcess()
'//---------------------------------------------------------------------------
Function ZTIProcess() 

	Dim sVersion,sArch,sFile
	Dim sInstallName, sInstallerPath
	Dim sLogFolder,sLogName,sLogPath
	Dim sAppMgr

	'// Apply Architecture arguments:
	'// If no argument provided check for MDT/SCCM variable
	'// If no variable or argument is provided, defualt to x86
	If oUtility.Arguments.Exists("arch") Then
		sArch = oUtility.Arguments("arch")
	ElseIf oEnvironment.Exists("Architecture") Then
		sArch = oEnvironment.Item("Architecture")
	Else
		sArch = "x86"
	End If
	
	'// Variables: 
	'// Change if needed
	sVersion = "2.14.2.9"
	
	sFile = "App Volumes Agent.msi"
	
	If oEnvironment.Exists("AppVolMgrServer") Then
		sAppMgr = oEnvironment.Item("AppVolMgrServer")
	End if
	
	'Apply Arguments
	If oUtility.Arguments.Exists("AppMgr") Then
		sAppMgr = oUtility.Arguments("AppMgr")
	End If
	
	sInstallName = "Vmware AppVolume Manager 2x"
	
	sInstallerPath = oUtility.ScriptDir & "\Source\" & sVersion & "\" & sFile

	'// Build log path (incase not used in task sequence)
	If oEnvironment.Item("_SMSTSLogPath") = "" Then 
		sLogFolder = oEnv("TEMP") & "\AppLogs"
	Else
		sLogFolder = oEnvironment.Item("_SMSTSLogPath") & "\AppLogs"
	End If
	oUtility.VerifyPathExists sLogFolder
	sLogName = Replace(sInstallName & "_" & sVersion & "_" & sArch & ".log"," ","")
	sLogPath = sLogFolder & "\" & sLogName
	
	'// Start the process
	oLogging.CreateEntry "Starting " & sInstallName & " (" & sVersion & ") " & sArch & " installation", LogTypeInfo	
	
	If not oFSO.FileExists(sInstallerPath) then
		oLogging.CreateEntry sInstallerPath & " was not found, unable to install " & sInstallName & " (" & sVersion & ")", LogTypeError
		ZTIProcess = Failure
		Exit Function
	End if
	
	'// Disable Zone Checks
	oEnv("SEE_MASK_NOZONECHECKS") = 1 

	iRetVal = oUtility.RunWithHeartbeat("msiexec /i """ & sInstallerPath & """ /qn MANAGER_ADDR=""" & sAppMgr & """ MANAGER_PORT=80 REBOOTREQUIRED=0 RebootYesNo=No /l*v """ & sLogPath & """")
	
	if (iRetVal = 0) or (iRetVal = 3010) then
		ZTIProcess = Success
		oShell.RegWrite "HKLM\System\CurrentControlSet\Services\svservices\Parameters\EnforceSSlCertificateValidation", 0, "REG_DWORD"
		
		oLogging.CreateEntry "Finished " & sInstallName & " installation", LogTypeInfo
	Else 
		ZTIProcess = Failure
		oLogging.CreateEntry sInstallName & " installation failed with exit code = " & iRetVal, LogTypeError
	End If
	
	'// Enable Zone Checks
	oEnv.Remove("SEE_MASK_NOZONECHECKS")

End Function 

Function CopyFile(sName,sDestPath)
	If oFSO.FileExists(oUtility.ScriptDir & "\" & sName) Then
		If Not oFSO.FolderExists(sDestPath) Then
			oLogging.CreateEntry "Created Directory: " & sDestPath, LogTypeInfo
			oFSO.CreateFolder sDestPath
		End If
		oLogging.CreateEntry "Preparing to copy " & oUtility.ScriptDir & "\" & sName, LogTypeInfo
		oFSO.CopyFile oUtility.ScriptDir  & "\" & sName, sDestPath, True
		oLogging.CreateEntry "The file " & sName & " was copied to " & sDestPath, LogTypeInfo
		CopyFile=0
	Else
		oLogging.CreateEntry "Failed to find : " & oUtility.ScriptDir  & "\" & sName, LogTypeERROR
		CopyFile=2
	End If

End Function

</script>
</job>
