<job id="Install-UEMAgent">
<script language="VBScript" src="..\..\scripts\ZTIUtility.vbs"/>
<script language="VBScript"> 

' //----------------------------------------------------------------------------
' //
' // Solution: Richard's Deployment Script
' // File: Install-UEMAgent.wsf
' //
' // Purpose: This will install User Environment Manager Agent
' //
' // Author: Richard Tracy
' //
' // Usage: cscript Install-UEMAgent.wsf [/license:<path-to-lic>] [/arch:x64|x86] [/debug:true]
' //
' //----------------------------------------------------------------------------

'//----------------------------------------------------------------------------
'// Global constant and variable declarations
'//---------------------------------------------------------------------------- 
Option Explicit 

Dim iRetVal 
'//----------------------------------------------------------------------------
'// Main routine
'//---------------------------------------------------------------------------- 
'On Error Resume Next
iRetVal = ZTIProcess
ProcessResults iRetVal
On Error Goto 0 

'//---------------------------------------------------------------------------
'// Function: ZTIProcess()
'//---------------------------------------------------------------------------
Function ZTIProcess() 

	Dim sVersion,sArch,sFile
	Dim arySplitVer,sSimpleVer
	Dim sInstallName, sInstallerPath
	Dim sLogFolder,sLogName,sLogPath
	Dim sLicense

	'// Apply Architecture arguments:
	'// If no argument provided check for MDT/SCCM variable
	'// If no variable or argument is provided, defualt to x86
	If oUtility.Arguments.Exists("arch") Then
		sArch = LCase(oUtility.Arguments("arch"))
	ElseIf oEnvironment.Exists("Architecture") Then
		sArch = LCase(oEnvironment.Item("Architecture"))
	Else
		sArch = "x86"
	End If
	
	'// Variables: 
	'// Change if needed
	sVersion = "9.5.0.832"
	
	arySplitVer = Split(sVersion, ".")
	sSimpleVer = arySplitVer(0) & "." & arySplitVer(1)
	
	'// Apply license arguments:
	'// If no argument provided check for MDT/SCCM variable
	If oUtility.Arguments.Exists("license") Then
		sLicense = oUtility.Arguments("license")
	ElseIf oEnvironment.Exists("UEMlicense") Then
		sLicense = oEnvironment.Item("UEMlicense")
	Else
		sLicense = oUtility.ScriptDir & "\Configs\VMware-UEM-" & sSimpleVer & ".0-GA.lic"
	End If
	
	sFile = "VMware User Environment Manager "& sSimpleVer &" " & sArch & ".msi"
	
	
	sInstallName = "VMware User Environment Manager"
	
	sInstallerPath = oUtility.ScriptDir & "\Source\" & sVersion & "\" & sFile

	'// Build log path (incase not used in task sequence)
	If oEnvironment.Exists("_SMSTSLogPath") Then 
		sLogFolder = oEnvironment.Item("_SMSTSLogPath") & "\AppLogs"
	Else
		sLogFolder = oEnv("TEMP") & "\AppLogs"
	End If
	oUtility.VerifyPathExists sLogFolder
	sLogName = Replace(sInstallName & "_" & sVersion & "_" & sArch & ".log"," ","")
	sLogPath = sLogFolder & "\" & sLogName
	
	'// Start the process
	oLogging.CreateEntry "Starting " & sInstallName & " (" & sVersion & ") " & sArch & " installation", LogTypeInfo	
	
	If not oFSO.FileExists(sInstallerPath) then
		oLogging.CreateEntry sInstallerPath & " was not found, unable to install " & sInstallName & " (" & sVersion & ")", LogTypeError
		ZTIProcess = Failure
		Exit Function
	End if
	
	'// Disable Zone Checks
	oEnv("SEE_MASK_NOZONECHECKS") = 1 
	'iRetVal = oUtility.RunWithHeartbeat("msiexec /i """ & sInstallerPath & """ /qn /norestart LICENSEFILE=""" & sLicense & """ ADDLOCAL=""FlexEngine"" /l*v """ & sLogPath & """")
	iRetVal = oUtility.RunWithHeartbeat("msiexec /i """ & sInstallerPath & """ /qn ADDLOCAL=""FlexEngine"" REBOOT=ReallySuppress /l*v """ & sLogPath & """ ")
	
	if (iRetVal = 0) or (iRetVal = 3010) then
		ZTIProcess = Success
		
		
		Const HKEY_CURRENT_USERS = &H80000001
		Const HKU_USERS = &H80000003
		Dim objRegistry,strKeyPath
		Set objRegistry = GetObject("winmgmts:\\.\root\default:StdRegProv")
		strKeyPath = "Software\Policies\Immidio\Flex Profiles"
		'"Software\Policies\Immidio\Flex Profiles\Arguments\DisableDirectFlex"
		
		' apply setting to current profile
		objRegistry.CreateKey HKEY_CURRENT_USERS, strKeyPath
		'Compatibility fix for VMware Horizon PCoIP smart card redirection
		oShell.RegWrite "HKCU\" & strKeyPath & "\DirectFlexHookLoadLibrary" , 0, "REG_DWORD"
		
		'Load default profile
		iRetVal = oUtility.RunWithHeartbeat("reg load ""HKU\Temp"" """ & oEnv("SystemDrive") & "\Users\Default\NTUSER.DAT""")
		objRegistry.CreateKey HKU_USERS, ("Temp\" & strKeyPath)
		'Compatibility fix for VMware Horizon PCoIP smart card redirection
		oShell.RegWrite "HKEY_USERS\Temp\" & strKeyPath & "\DirectFlexHookLoadLibrary" , 0, "REG_DWORD"
		'Disable DirectFlex
		
		oShell.Run "reg unload HKU\Temp", 0, true
		
		oLogging.CreateEntry "Finished " & sInstallName & " installation", LogTypeInfo
	Else 
		ZTIProcess = Failure
		oLogging.CreateEntry sInstallName & " installation failed with exit code = " & iRetVal, LogTypeError
	End If
	
	'// Enable Zone Checks
	oEnv.Remove("SEE_MASK_NOZONECHECKS")

End Function 

Function CopyFile(sName,sDestPath)
	If oFSO.FileExists(oUtility.ScriptDir & "\" & sName) Then
		If Not oFSO.FolderExists(sDestPath) Then
			oLogging.CreateEntry "Created Directory: " & sDestPath, LogTypeInfo
			oFSO.CreateFolder sDestPath
		End If
		oLogging.CreateEntry "Preparing to copy " & oUtility.ScriptDir & "\" & sName, LogTypeInfo
		oFSO.CopyFile oUtility.ScriptDir  & "\" & sName, sDestPath, True
		oLogging.CreateEntry "The file " & sName & " was copied to " & sDestPath, LogTypeInfo
		CopyFile=0
	Else
		oLogging.CreateEntry "Failed to find : " & oUtility.ScriptDir  & "\" & sName, LogTypeERROR
		CopyFile=2
	End If

End Function

</script>
</job>



















