<job id="Install-ViewClient">
<script language="VBScript" src="..\..\scripts\ZTIUtility.vbs"/>
<script language="VBScript"> 

' //----------------------------------------------------------------------------
' //
' // Solution: Richard's Deployment Script
' // File: Install-ViewClient.wsf
' //
' // Purpose: This will install Horizon View Client
' //
' // Author: Richard Tracy
' //
' // Usage: cscript Install-ViewClient.wsf [/debug:true]
' //
' //----------------------------------------------------------------------------

'//----------------------------------------------------------------------------
'// Global constant and variable declarations
'//---------------------------------------------------------------------------- 

Option Explicit 

Dim iRetVal 

'//----------------------------------------------------------------------------
'// End declarations
'//---------------------------------------------------------------------------- 

'//----------------------------------------------------------------------------
'// Main routine
'//---------------------------------------------------------------------------- 

'On Error Resume Next
iRetVal = ZTIProcess
ProcessResults iRetVal
On Error Goto 0 

'//---------------------------------------------------------------------------
'//
'// Function: ZTIProcess()
'//
'// Input: None
'// 
'// Return: Success - 0
'// Failure - non-zero
'//
'// Purpose: Perform main ZTI processing
'// 
'//---------------------------------------------------------------------------
Function ZTIProcess() 

	Dim sVersion,sArch,sFile
	Dim sInstallName, sInstallerPath
	Dim sLogFolder,sLogName,sLogPath
	
	'// Variables
	sVersion = "4.10.0-11021086"
	sArch = "x64"
	sFile = "VMware-Horizon-Client-" & sVersion & ".exe"

	sInstallName = "VMWare Horizon View Client"

	sInstallerPath = oUtility.ScriptDir & "\source\" & sFile
	
	'// Build log path (incase not used in task sequence)
	If oEnvironment.Item("_SMSTSLogPath") = "" Then 
		sLogFolder = oEnv("TEMP") & "\AppLogs"
	Else
		sLogFolder = oEnvironment.Item("_SMSTSLogPath") & "\AppLogs"
	End If
	oUtility.VerifyPathExists sLogPath
	sLogName = Replace(sInstallName & "_" & sVersion & "_" & sArch & ".log"," ","")
	sLogPath = sLogFolder & "\" & sLogName
	
	'// Start the process
	oLogging.CreateEntry "Starting " & sInstallName & " (" & sVersion & ") " & sArch & " installation", LogTypeInfo	
	
	If not oFSO.FileExists(sInstallerPath) then
		oLogging.CreateEntry sInstallerPath & " was not found, unable to install " & sInstallName & " (" & sVersion & ")", LogTypeError
		ZTIProcess = Failure
		Exit Function
	End if
	
	'// Disable Zone Checks
	oEnv("SEE_MASK_NOZONECHECKS") = 1 

	iRetVal = oUtility.RunWithHeartbeat("""" & sInstallerPath & """ /v URL_FILTERING_ENABLED=1 /silent /norestart /log """ & sLogPath & """")
	
	if (iRetVal = 0) or (iRetVal = 3010) then
		ZTIProcess = Success 
		oLogging.CreateEntry "Finished " & sInstallName & " installation", LogTypeInfo
		'DeleteFolder "C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Horizon View Client"
	Else 
		ZTIProcess = Failure
		oLogging.CreateEntry sInstallName & " installation failed with exit code = " & iRetVal, LogTypeError
	End If

	'// Enable Zone Checks
	oEnv.Remove("SEE_MASK_NOZONECHECKS")

End Function 

Function CopyFile(sName,sDestPath)
	If oFSO.FileExists(oUtility.ScriptDir & "\" & sName) Then
		If Not oFSO.FolderExists(sDestPath) Then
			oLogging.CreateEntry "Created Directory: " & sDestPath, LogTypeInfo
			oFSO.CreateFolder sDestPath
		End If
		oLogging.CreateEntry "Preparing to copy " & oUtility.ScriptDir & "\" & sName, LogTypeInfo
		oFSO.CopyFile oUtility.ScriptDir  & "\" & sName, sDestPath, True
		oLogging.CreateEntry "The file " & sName & " was copied to " & sDestPath, LogTypeInfo
		CopyFile=0
	Else
		oLogging.CreateEntry "Failed to find : " & oUtility.ScriptDir  & "\" & sName, LogTypeERROR
		CopyFile=2
	End If

End Function

Function DeleteFolder(sPath)

	On error resume next
	Dim strPath
	strPath = sPath
	If oFSO.FolderExists(strPath) Then
		oLogging.CreateEntry "Folder Found: " & strPath, LogTypeInfo
		oFSO.DeleteFolder strPath,0
		oLogging.CreateEntry "Folder Deleted: " & strPath, LogTypeInfo
	Else
		oLogging.CreateEntry "Folder Not Found: " & strPath & ", skipping", LogTypeInfo
	End If

End Function
</script>
</job>















